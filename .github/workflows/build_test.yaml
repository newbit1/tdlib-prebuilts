name: build-test

on:
  workflow_dispatch:
  
permissions:
  actions: write
  contents: write
  
jobs:
  test_build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0
          fetch-tags: true
          
      - name: Clone TDLib and set version
        run: |
          git clone https://github.com/tdlib/td.git
          cd td
            echo "UPDATE_TDLIB=false" >> "$GITHUB_ENV"
            commit_hash="7d257dcda"
            version="1.8.55"
            git checkout $commit_hash
            echo "version=$version" >> "$GITHUB_ENV"
            echo "commit_hash=$commit_hash" >> "$GITHUB_ENV"
            echo "UPDATE_TDLIB=true" >> "$GITHUB_ENV"
            printf "commit_message<<EOF\n%s\n%s\nEOF\n" "TDLib Prebuilt Binaries $version" "$commit_hash Update version to $version" >> $GITHUB_ENV
          cd -
          
      - name: Create Zip Files for test Build
        if: env.UPDATE_TDLIB == 'true'
        run: |
          mkdir artifacts && ARTIFACT_DIR="${PWD}/artifacts"
          echo "ARTIFACT_DIR=$ARTIFACT_DIR" >> $GITHUB_ENV
          
          wget -O "$ARTIFACT_DIR/test-build_0.zip" https://zlib.net/fossils/zlib-1.3.1.tar.gz
          for i in {1..22}; do
              cp "$ARTIFACT_DIR/test-build_0.zip" "$ARTIFACT_DIR/test-build_$i.zip"
          done

      - name: Upload To Artifacts Dir
        if: env.UPDATE_TDLIB == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: ArtifactsDir
          path: ${{ env.ARTIFACT_DIR }}/*.zip
          retention-days: 1
      
      - name: Download All Artifacts
        if: env.UPDATE_TDLIB == 'true'
        uses: actions/download-artifact@v4
        with:
          name: ArtifactsDir
          path: artifacts

      - name: Release
        uses: ncipollo/release-action@v1
        with:
          tag: "v$version"
          name: "$commit_hash Update version to $version"
          body: "$commit_message"
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: artifacts/*.zip
          generate_release_notes: false  # Optional: Keine auto Notes, da du body hast
          draft: false
          prerelease: false
